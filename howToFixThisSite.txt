The flaws are:
1. Cross-Site Scripting (XSS)
2. Broken Authentication and Session Management
3. Missing Function Level Access Control
4. Unvalidated Redirects and Forwards
5. Cross-Site Request Forgery (CSRF)

If you delete the lines that was directed to comment, the line numbers won't match any more.

Issue: Cross-Site Scripting (XSS)
Steps to reproduce:
1. Run cybersecuritybase-project
2. Open browser and type http://localhost:8080 in the URL-field
3. In 'Username'-field, type: <script>window.location.href='http://www.google.com/';</script>
4. In 'Password'-field, type any password
5. Press 'Register Now!'-button
6. Click link 'Move to Hunters Page'
7. All registered names will be listed, and your JavaScript-code activates

Steps to fix this issue:
1. Open file hunters.html
2. On line 38 there is 'th:utext', which prints the names without escaping special characters
3. Change 'th:utext' to 'th:text'
4. Now the characters like <, >, (, ) and " are escaped to different form, so the script doesn't activate

Issue: Broken Authentication and Session Management
Steps to reproduce:
1. Run cybersecuritybase-project
2. Open browser and type http://localhost:8080 in the URL-field
3. In 'Username'-field, type any name
4. In 'Password'-field, type any password
5. Press 'Register Now!' -button and your JSESSIONID becomes your IdCode
6. Click link 'Move to Hunters Page'
7. Press 'Profile Page' -button
8. Your profile page opens with your JSESSIONID in the URL
9. This is bad, because you might copy-paste that URL to someone who then gets your JSESSIONID
10. Copy your JSESSIONID from the URL
11. Open incognito-window to get a new JSESSIONID
12. Repeat steps 3-9
13. Change the JSESSIONID in the URL to the JSESSIONID you copied earlier
14. You get access to profile page of the user who signed up with that JSESSIONID

Steps to fix this issue:
1. Open file MonkepoHunterController.java
2. In monkepoHunters-method, comment lines 70 (authenticatedUser.setIdCode(session.getId());),
	and 71 (monkepoHunterRepository.save(authenticatedUser);)
3. In register-method, comment line 85 (monkepoHunter.setIdCode(session.getId());),
	and uncomment line 84 (monkepoHunter.setIdCode(UUID.randomUUID().toString());)
4. Now the IdCode for your profile is a random String, not your cookie
5. In profilePage-method, uncomment lines 106-109
6. Now user can acces only his/her own profile page

Issue: Missing Function Level Access Control
Steps to preproduce:
1. Run cybersecuritybase-project
2. Open browser and type http://localhost:8080 in the URL-field
3. In 'Username'-field, type any name
4. In 'Password'-field, type any password
5. Press 'Register Now!' -button
6. In URL-field, type http://localhost:8080/adminPage
7. You get access to page that should be only for admins

Steps to fix this issue:
1. Open file SecurityConfiguration.java
2. On line 29, change "USER" to "ADMIN"
3. Now only admins can access /adminPage

Issue: Unvalidated Redirects and Forwards
Steps to preproduce:
1. Run cybersecuritybase-project
2. Open browser and type http://localhost:8080 in the URL-field
3. In 'Username'-field, type any name
4. In 'Password'-field, type any password
5. Press 'Register Now!' -button
6. in URL-field, type http://localhost:8080/redirect?where=http://www.google.com
7. Evil user can link that to other users, who think it is trustworthy, but get redirected to another site

Steps to fix this issue:
1. Open MonkepoHunterController.java
2. In redirect-method, uncomment lines 124-126
3. Now controller checks, if the site user wants to redirect is allowed

Issue: Cross-Site Request Forgery (CSRF)
Steps to preproduce:
1. Run cybersecuritybase-project
2. Open browser and type http://localhost:8080 in the URL-field
3. In 'Username'-field, type any name
4. In 'Password'-field, type any password
5. Press 'Register Now!' -button
6. Click link 'Move to Hunters Page'
7. Click link 'Profile Page for evilUser'
8. You can see that evilUser's amount is 100
9. Click link 'Back to Hunters Page'
10. Click link 'Profile Page'
11. You can see that your account also has amount 100
12. If you want, you can visit some other page, like Google, but don't log out
13. In URL-field, type http://localhost:8080/youWon
14. That site could be some evil user's own page, which he/she could link to you or redirect you there
15. Click button 'Get Money, Get Paid!'
16. There is a form and two hidden fields with values set so that evilUser gets 100 monkepoMoney from you
	because you are still authenticated on Monkepo-site, because you didn't log out
17. If you now check your profile page and evilUser profile page,
	you can see that your amount is 0 and evilUser's 200
	
Steps to fix this issue:
1. Open file SecurityConfiguration.java
2. In configure-method, comment line 23: 'http.csrf().disable();'
3. Now when you click 'Get Money, Get Paid' -button, there comes csrf-error and no money is transferred